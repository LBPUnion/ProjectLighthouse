@page "/register"
@using LBPUnion.ProjectLighthouse.Configuration
@using LBPUnion.ProjectLighthouse.Localization.StringLists
@model LBPUnion.ProjectLighthouse.Servers.Website.Pages.RegisterForm

@{
    Layout = "Layouts/BaseLayout";
    Model.Title = "Register";
}

<script src="https://geraintluff.github.io/sha256/sha256.min.js"></script>

<script>
    function onSubmit(form) {
        const passwordInput = document.getElementById("password");
        const confirmPasswordInput = document.getElementById("confirmPassword");
        const passwordSubmit = document.getElementById("password-submit");
        const confirmPasswordSubmit = document.getElementById("confirm-submit");
        passwordSubmit.value = sha256(passwordInput.value);
        confirmPasswordSubmit.value = sha256(confirmPasswordInput.value);
        
        return true;
    }
</script>

@if (!string.IsNullOrWhiteSpace(Model.Error))
{
    <div class="ui negative message">
        <div class="header">
            @Model.Translate(GeneralStrings.Error)
        </div>
        <p>@Model.Error</p>
    </div>
}

<p><b>@Model.Translate(RegisterStrings.UsernameNotice)</b></p>

<form class="ui form" onsubmit="return onSubmit(this)" method="post">
    @Html.AntiForgeryToken()

    <div class="field">
        <label>Username</label>
        <div class="ui left icon input">
            <input type="text" name="username" id="text" placeholder="Username" pattern="^[a-zA-Z0-9_.-]*$" minlength="3" maxlength="16">
            <i class="user icon"></i>
        </div>
    </div>

    @if (ServerConfiguration.Instance.Mail.MailEnabled)
    {
        <div class="field">
            <label>Email address</label>
            <div class="ui left icon input">
                <input type="email" name="emailAddress" id="emailAddress" placeholder="Email Address">
                <i class="mail icon"></i>
            </div>
        </div>
    }

    <div class="field">
        <label>Password</label>
        <div class="ui left icon input">
            <input type="password" id="password" placeholder="Password">
            <input type="hidden" name="password" id="password-submit">
            <i class="lock icon"></i>
        </div>
    </div>

    <div class="field">
        <label>Confirm Password</label>
        <div class="ui left icon input">
            <input type="password" id="confirmPassword" placeholder="Confirm Password">
            <input type="hidden" name="confirmPassword" id="confirm-submit">
            <i class="lock icon"></i>
        </div>
    </div>

    @if (ServerConfiguration.Instance.Captcha.CaptchaEnabled)
    {
        @await Html.PartialAsync("Partials/CaptchaPartial")
    }

    <input type="submit" value="Register" id="submit" class="ui green button">
</form>

<br><br>

@if (ServerStatics.IsDebug)
{
    <button class="ui red button" onclick="fill()">DEBUG: Fill with everything but email</button>

    <script>
        const usernameField = document.getElementById("text");
        const emailField = document.getElementById("emailAddress");
        const passwordField = document.getElementById("password");
        const confirmPasswordField = document.getElementById("confirmPassword");
        
        function fill() {
            const min = 100;
            const max = 99999999;
            
            const rand = Math.floor(Math.random() * (max - min + 1) + min);
            
            usernameField.value = rand.toString();
            passwordField.value = rand.toString();
            confirmPasswordField.value = rand.toString();
            
            emailField.focus();
        }
    </script>
}